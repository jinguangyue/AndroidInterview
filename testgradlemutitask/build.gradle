import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27



    defaultConfig {
        applicationId "com.testgradlemutitask"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


    }

    flavorDimensions("flavor")

    productFlavors {
        pub {
            dimension "flavor"
        }

        flavor {
            dimension "flavor"
            /*sourceSets.getByName('main').java {
                exclude 'com/testgradlemutitask/flavor1.java'
                exclude 'com/testgradlemutitask/flavor2.java'
            }*/
        }

    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            jni.srcDirs = []
            java {
                srcDir 'src/main/java'
                if (getCurrentFlavor().equals("flavor")) {
                    exclude 'com/testgradlemutitask/flavor1.java'
                    exclude 'com/testgradlemutitask/flavor2.java'
                }
            }
        }

        flavor {
            jniLibs.srcDir 'src/flavor/libs'
            jni.srcDirs = []
            java {
                srcDir 'src/flavor/java'
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    Pattern pattern

    if (tskReqStr.contains("assemble"))
        pattern = Pattern.compile("assemble(\\w+)")
    else
        pattern = Pattern.compile("generate(\\w+)")

    Matcher matcher = pattern.matcher(tskReqStr)

    if (matcher.find()) {
        println matcher.group(1).toLowerCase()
        return matcher.group(1).toLowerCase()
    } else {
        println "NO MATCH FOUND"
        return ""
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
